{
  "preamble": {
    "title": "aiken-lang/hospital_management_smartcontract",
    "description": "Aiken contracts for project 'aiken-lang/hospital_management_smartcontract'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "compiler": {
      "name": "Aiken",
      "version": "v1.0.21-alpha+4b04517"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "main.grantSMC",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/main~1DatumGrant"
        }
      },
      "redeemer": {
        "title": "_redeemer",
        "schema": {
          "$ref": "#/definitions/Void"
        }
      },
      "compiledCode": "5902450100003232323232323232222325333007323253330093370e900018040008991919191919299980799b87480080044c8c8c8cc004004008894ccc05800452809919299980a99b8f00200b14a226600800800260320046eb8c05c004dd6180a180a980a980a980a980a980a980a980a9807000980998068050a50300d001301100130110013009006375c601c002600e0022c6018002600a601660186018601860186018600a00829309b2b191919299980499b87480000044c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c94ccc070c0780084c8c9263013006301200916375c603800260380046eb8c068004c068008c060004c060008dd7180b000980b001180a000980a0011bae30120013012002375c602000260200046eb8c038004c01c01858c01c0148c94ccc024cdc3a4000002264646464a6660206024004264649319299980799b87480000044c8c94ccc050c0580084c9263253330123370e900000089919299980b980c80109924c601c0022c602e00260200042a66602466e1d20020011323232323232533301b301d002149858dd6980d800980d8011bad30190013019002375a602e00260200042c60200022c6028002601a0062a66601e66e1d200200115333012300d00314985858c034008c01c00c58c040004c040008c038004c01c00858c01c0048c94ccc020cdc3a400000226464a66601a601e0042930b1bae300d0013006002153330083370e900100089919299980698078010a4c2c6eb8c034004c01800858c0180048c014dd5000918019baa0015734aae7555cf2ab9f5742ae89",
      "hash": "12fe7e137503c0fa23feedd3d7de53aee2a19866d4381471f43b50e5"
    },
    {
      "title": "main.requestSMC",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/main~1DatumRequest"
        }
      },
      "redeemer": {
        "title": "_redeemer",
        "schema": {
          "$ref": "#/definitions/Void"
        }
      },
      "compiledCode": "59026d010000323232323232323222232533300732323232533300b3370e9000180500189919299980699b8748000c03000c4c8c8c8c94ccc044cdc3a400400226464a666026660026004602201c00e29444cc004c008c04403801488c8c8cc004004008894ccc06800452809919299980c99b8f00200614a2266008008002603a0046eb8c06c004dd6180c180c980c980c980c980c980c980c980c98090011180b0008a50300f00130133014300d00a375c602400260160062c6eb8c040004c02400c58c038004c01cc034c038c038c038c01c018c030004c014c02cc030c030c030c030c0140105261365632323253330093370e90000008991919191919191919191919299980c180d0010991924c601e008601c00a2c6eb8c060004c060008c058004c058008c050004c050008dd7180900098090011bae30100013010002375c601c002600e00c2c600e00a464a66601266e1d20000011323232325333010301200213232498c94ccc03ccdc3a400000226464a666028602c0042649319299980919b87480000044c8c94ccc05cc0640084c926300e0011630170013010002153330123370e90010008991919191919299980d980e8010a4c2c6eb4c06c004c06c008dd6980c800980c8011bad30170013010002163010001163014001300d0031533300f3370e90010008a99980918068018a4c2c2c601a004600e0062c60200026020004601c002600e0042c600e002464a66601066e1d200000113232533300d300f002149858dd7180680098030010a99980419b87480080044c8c94ccc034c03c00852616375c601a002600c0042c600c0024600a6ea80048c00cdd5000ab9a5573aaae7955cfaba157441",
      "hash": "298fde3f0771d4c1e1e59d99f2cb9b14537e4f7db4f34f912c3164b5"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "Option$aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Optional",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "Void": {
      "title": "Unit",
      "description": "The nullary constructor.",
      "anyOf": [
        {
          "dataType": "constructor",
          "index": 0,
          "fields": []
        }
      ]
    },
    "aiken/transaction/credential/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Referenced",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "main/DatumGrant": {
      "title": "DatumGrant",
      "anyOf": [
        {
          "title": "DatumGrant",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "policyId",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "policyIdMedRecord",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "assetName",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "requestorAddress",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "publicKeyEcGrant",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "ownerAddress",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "nonceAccess",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "encyptAesKey",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "main/DatumRequest": {
      "title": "DatumRequest",
      "anyOf": [
        {
          "title": "DatumRequest",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "policyId",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "policyIdMedRecord",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "assetName",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "requestorAddress",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "ownerAddress",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "requestorPublicKey",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    }
  }
}